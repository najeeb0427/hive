create view intermediate_view as
select t.id, t.PROD_DATE,t.Total_Production,case when t.RowNumber < M.start_row then 0 when V.RowNumber is null then 1 else V.RowNumber-M.start_row+2 end as NORMALIZED_MONTH,case when V.RowNumber is null then 1 else V.RowNumber+1 end as REPORTED_MONTH from
(SELECT *,ROW_NUMBER() OVER (partition by id Order by from_unixtime(unix_timestamp(PROD_DATE,'yyyy-dd-MM'),'yyyy-MM-dd')) AS RowNumber FROM hdpi_newproduction6_0115) t 
 left join 
  (SELECT id,PROD_DATE,Total_Production,ROW_NUMBER() OVER (partition by id Order by from_unixtime(unix_timestamp(PROD_DATE,'yyyy-dd-MM'),'yyyy-MM-dd')) AS RowNumber FROM hdpi_newproduction6_0115) V
   on t.RowNumber = V.RowNumber + 1 and t.id = V.id
    join
     (
      select id,min(case when Total_Production > 15000 then RowNumber else 2147483647 end) as start_row from  
       (SELECT id,PROD_DATE,Total_Production,ROW_NUMBER() OVER (partition by id Order by from_unixtime(unix_timestamp(PROD_DATE,'yyyy-dd-MM'),'yyyy-MM-dd')) AS RowNumber FROM hdpi_newproduction6_0115) t group by id
        ) M
	 on t.id = M.id
	  ;

